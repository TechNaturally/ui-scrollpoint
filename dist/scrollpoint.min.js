/*!
 * angular-ui-scrollpoint
 * https://github.com/angular-ui/ui-scrollpoint
 * Version: 1.2.1 - 2015-11-25T22:24:07.196Z
 * License: MIT
 */
!function(){"use strict";angular.module("ui.scrollpoint",[]).directive("uiScrollpoint",["$window",function(t){function o(){if(angular.isDefined(t.pageYOffset))return t.pageYOffset;var o=document.compatMode&&"BackCompat"!==document.compatMode?document.documentElement:document.body;return o.scrollTop}function i(o){return o?t.document.body.scrollHeight-t.innerHeight:t.innerHeight}return{require:["uiScrollpoint","^?uiScrollpointTarget"],scope:{uiScrollpoint:"@",uiScrollpointClass:"@?",uiScrollpointAction:"&?",uiScrollpointBottom:"@?"},controller:function(){this.absolute=!0,this.percent=!1,this.shift=0,this.past=void 0,this.bottom=void 0,this.hasTarget=!1,this.$target=void 0,this.scrollpointClass="ui-scrollpoint",this.action=void 0,this.getScrollOffset=function(){return this.hasTarget?this.$target[0].scrollTop:o()}},link:function(n,e,s,l){function r(t){if(t){if("string"==typeof t)if(h.percent="%"==t.charAt(t.length-1),h.percent&&(t=t.substr(0,t.length-1)),"-"===t.charAt(0))h.absolute=h.percent,h.shift=-parseFloat(t.substr(1));else if("+"===t.charAt(0))h.absolute=h.percent,h.shift=parseFloat(t.substr(1));else{var o=parseFloat(t);!isNaN(o)&&isFinite(o)&&(h.absolute=!0,h.shift=o)}else if("number"==typeof t)return t=t.toString(),void r(t)}else h.absolute=!1;m=c()}function c(){var t=h.absolute?h.shift:a()+h.shift;return h.percent&&h.absolute?(t=h.shift/100*p(),h.bottom&&(t=p()-t)):h.bottom&&(t=h.absolute?p()-t:t+e[0].offsetHeight+1-u()),t}function a(){if(!d){var t=e[0].getBoundingClientRect();return t.top+o()}return e[0].offsetTop}function u(){return d?h.$target[0].offsetHeight:i()}function p(){return d?h.$target[0].scrollHeight-h.$target[0].clientHeight:i(!0)}function f(){var t=c(),o=h.getScrollOffset(),i=null,s=angular.isUndefined(h.past);!h.bottom&&o>=t||h.bottom&&t>=o?(h.past||(i=t-o,h.past=!0),e.hasClass(h.scrollpointClass)||e.addClass(h.scrollpointClass),m=t):(!h.bottom&&m>o||h.bottom&&o>m)&&((h.past||s)&&(i=m-o,h.past=!1),e.hasClass(h.scrollpointClass)&&e.removeClass(h.scrollpointClass)),h.action&&angular.isFunction(h.action)&&null!==i&&(s?h.action(e,i*(h.bottom?-1:1)):n.$apply(function(){h.action(e,i*(h.bottom?-1:1))}))}function g(){e.removeClass(h.scrollpointClass),h.past=h.bottom,m=c(),f()}var h=l[0],d=l[1];h.bottom=n.uiScrollpointBottom,h.hasTarget=d?!0:!1,h.$target=d&&d.$element||angular.element(t),h.scrollpointClass=n.uiScrollpointClass||"ui-scrollpoint",h.action=n.uiScrollpointAction?n.uiScrollpointAction():void 0;var m;r(n.uiScrollpoint),n.$on("scrollpointShouldReset",g),h.$target.on("scroll",f),e.ready(f),n.$on("$destroy",function(){h.$target.off("scroll",f)}),n.$watch("uiScrollpoint",function(t){r(t),f()})}}}]).directive("uiScrollpointTarget",[function(){return{controller:["$element",function(t){this.$element=t}]}}]).directive("uiScrollpointPin",[function(){return{restrict:"A",require:"uiScrollpoint",priority:400,link:function(t,o,i,n){function e(){if(l){var t=o,i=n.getScrollOffset();t.css("top",i-r+"px")}}var s,l,r=0,c={};n.action&&(s=n.action),n.action=function(t,o){0>=o&&!l?(r=n.getScrollOffset()-t[0].offsetTop+o*(n.bottom?-1:1),l=t.clone(),l.css("visibility","hidden"),t.after(l),c.position=t.css("position"),c.top=t.css("top"),t.addClass("pinned"),t.css("position","absolute"),n.$target.on("scroll",e),e()):o>0&&l&&(t.removeClass("pinned"),t.css("position",c.position),t.css("top",c.top),l.remove(),l=void 0,n.$target.off("scroll",e)),s&&angular.isFunction(s)&&s(t,o)}}}}])}();