/*!
 * angular-ui-scrollpoint
 * https://github.com/angular-ui/ui-scrollpoint
 * Version: 1.2.1 - 2015-12-03T06:15:39.496Z
 * License: MIT
 */
!function(){"use strict";angular.module("ui.scrollpoint",[]).directive("uiScrollpoint",["$window","$timeout",function(t,i){function e(){if(angular.isDefined(t.pageYOffset))return t.pageYOffset;var i=document.compatMode&&"BackCompat"!==document.compatMode?document.documentElement:document.body;return i.scrollTop}function s(){return t.document.body.scrollHeight-t.innerHeight}function o(i){return i?t.document.body.clientHeight:t.innerHeight}return{require:["uiScrollpoint","^?uiScrollpointTarget"],scope:{uiScrollpoint:"@",uiScrollpointClass:"@?",uiScrollpointAction:"&?",uiScrollpointEdge:"@"},controller:function(){this.$element=void 0,this.$target=void 0,this.hasTarget=!1,this.edges={top:!0},this.hitEdge=void 0,this.absolute=!0,this.percent=!1,this.shift=0,this.enabled=!0,this.scrollpointClass="ui-scrollpoint",this.actions=void 0,this.addEdge=function(t,i){angular.isString(t)&&(angular.isUndefined(i)&&(i=!0),"view"==t?(this.addEdge("top","bottom"),this.addEdge("bottom","top")):this.edges[t]=i)},this.addAction=function(t){t&&angular.isFunction(t)&&(angular.isUndefined(this.actions)?this.actions=[t]:-1==this.actions.indexOf(t)&&this.actions.push(t))},this.setScrollpoint=function(t){if(t){if("string"==typeof t)if(this.percent="%"==t.charAt(t.length-1),this.percent&&(t=t.substr(0,t.length-1)),"-"===t.charAt(0))this.absolute=this.percent,this.shift=-parseFloat(t.substr(1));else if("+"===t.charAt(0))this.absolute=this.percent,this.shift=parseFloat(t.substr(1));else{var i=parseFloat(t);!isNaN(i)&&isFinite(i)&&(this.absolute=!0,this.shift=i)}else if("number"==typeof t)return void this.setScrollpoint(t.toString())}else this.absolute=!1,this.percent=!1,this.shift=0},this.setClass=function(t){t||(t="ui-scrollpoint"),this.scrollpointClass=t},this.setEdges=function(t){if(angular.isString(t))this.edges={},this.addEdge(t);else if(angular.isArray(t)){this.edges={};for(var i in t)this.addEdge(t[i])}else if(angular.isObject(t)){this.edges={};for(var e in t)this.addEdge(e,t[e])}else this.edges={top:!0}},this.setElement=function(t){this.$element=t},this.setTarget=function(i){i?(this.$target=i,this.hasTarget=!0):(this.$target=angular.element(t),this.hasTarget=!1)},this.scrollEdgeHit=function(){var t,i;for(var e in this.edges){var s="top"==e,o="bottom"==e,n=this.edges[e],r="top"==n,l="bottom"==n;n===!0&&(s&&(r=!0),o&&(l=!0));var a=this.getScrollOffset();o&&(a+=this.getTargetHeight());var c;this.absolute?(c=this.percent?this.shift/100*this.getTargetScrollHeight():this.shift,o&&(c=this.getTargetContentHeight()-c,this.hasTarget&&(c+=this.getTargetHeight()))):(r?c=this.getElementTop():l&&(c=this.getElementBottom()),c+=this.shift);var h=a-c;o&&(h*=-1),(angular.isUndefined(t)||h>t)&&(t=h,i=e)}return this.hitEdge=t>=0?i:void 0,t},this.getScrollOffset=function(){return this.hasTarget?this.$target[0].scrollTop:e()},this.getTargetHeight=function(){return this.hasTarget?this.$target[0].offsetHeight:o()},this.getTargetContentHeight=function(){return this.hasTarget?this.$target[0].scrollHeight-this.$target[0].clientHeight:o(!0)},this.getTargetScrollHeight=function(){return this.hasTarget?this.$target[0].scrollHeight-this.$target[0].clientHeight:s()},this.getElementTop=function(){var t=this.$element[0].offsetTop;return this.hasTarget&&(t-=this.$target[0].offsetTop),t},this.getElementBottom=function(){return this.getElementTop()+this.$element[0].offsetHeight}},link:function(t,e,s,o){function n(){if(c&&l.enabled){var t=l.scrollEdgeHit(),i=!1;if(t>=0?h||(e.hasClass(l.scrollpointClass)||e.addClass(l.scrollpointClass),i=!0,h=!0):(h||angular.isUndefined(h))&&(e.hasClass(l.scrollpointClass)&&e.removeClass(l.scrollpointClass),i=!0,h=!1),i&&l.actions)for(var s in l.actions)l.actions[s](t,e)}}function r(){e.removeClass(l.scrollpointClass),h=void 0,i(n)}var l=o[0],a=o[1],c=!1,h=!1;l.setElement(e),l.setTarget(a?a.$element:null),s.$observe("uiScrollpoint",function(t){l.setScrollpoint(t),n()}),s.$observe("uiScrollpointAction",function(){t.uiScrollpointAction&&angular.isFunction(t.uiScrollpointAction)&&l.addAction(t.uiScrollpointAction())}),s.$observe("uiScrollpointClass",function(t){l.setClass(t),h=!1,n()}),s.$observe("uiScrollpointEdge",function(i){if(i){var e=["top","bottom","view"];-1==e.indexOf(i)&&(i=t.$eval(i)),t.uiScrollpointEdge=i,l.setEdges(i)}}),e.ready(function(){c=!0,n()}),l.$target.on("scroll",n),t.$on("$destroy",function(){l.$target.off("scroll",n)}),t.$on("scrollpointShouldReset",r)}}}]).directive("uiScrollpointTarget",[function(){return{controller:["$element",function(t){this.$element=t}]}}]).directive("uiScrollpointPin",["$compile","$timeout",function(t,i){return{restrict:"A",require:"uiScrollpoint",link:function(e,s,o,n){function r(){if(l){var t=s,i=n.hasTarget?0:n.getScrollOffset();t.css("left",a.x+"px"),t.css("top",i-a.y+"px")}}var l,a={},c={};n.addAction(function(s,o){s>=0&&!l&&(a.x=o[0].offsetLeft,a.y=n.getScrollOffset()-o[0].offsetTop-s*("bottom"==n.hitEdge?-1:1),l=o.clone(),l.css("visibility","hidden"),o.after(l),l.removeAttr("ui-scrollpoint-pin"),l.attr("ui-scrollpoint-action","unpinIt"),i(function(){e.unpinIt=function(t){if(0>t&&l){n.$target.off("scroll",r),n.enabled=!0,o.removeClass("pinned");for(var i in c)o.css(i,c[i]);l.remove(),l=void 0}},t(l)(e)}),n.enabled=!1,c.position=o.css("position"),c.top=o.css("top"),c.left=o.css("left"),o.addClass("pinned"),o.css("position","absolute"),n.$target.on("scroll",r),r())})}}}])}();